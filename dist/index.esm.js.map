{"version":3,"file":"index.esm.js","sources":["../src/tokens/colors.ts","../src/tokens/typography.ts","../src/components/Button/Button.tsx","../src/components/Input/Input.tsx"],"sourcesContent":["// Color tokens for our design system\n// These colors ensure consistency across all components\n\nexport const colors = {\n  // Primary colors - used for main actions and highlights\n  primary: {\n    main: '#2563eb',    // Blue - main primary color\n    hover: '#1d4ed8',   // Darker blue for hover states\n    light: '#dbeafe'    // Light blue for backgrounds\n  },\n  \n  // Secondary colors - used for less important actions\n  secondary: {\n    main: '#64748b',    // Gray - main secondary color\n    hover: '#475569',   // Darker gray for hover states\n    light: '#f1f5f9'    // Light gray for backgrounds\n  },\n  \n  // Error colors - used for error states and validation\n  error: {\n    main: '#dc2626',    // Red - main error color\n    hover: '#b91c1c',   // Darker red for hover states\n    light: '#fef2f2'    // Light red for error backgrounds\n  },\n  \n  // Success colors - used for success states and confirmations\n  success: {\n    main: '#16a34a',    // Green - main success color\n    hover: '#15803d',   // Darker green for hover states\n    light: '#f0fdf4'    // Light green for success backgrounds\n  },\n  \n  // Warning colors - used for warning states and alerts\n  warning: {\n    main: '#d97706',    // Orange - main warning color\n    hover: '#b45309',   // Darker orange for hover states\n    light: '#fffbeb'    // Light orange for warning backgrounds\n  },\n  \n  // Text colors - used for all text content\n  text: {\n    primary: '#1f2937',   // Dark gray for main text\n    secondary: '#6b7280'  // Medium gray for secondary text\n  },\n  \n  // Border colors - used for component borders\n  border: {\n    default: '#d1d5db',  // Light gray for default borders\n    focus: '#2563eb',    // Blue for focused elements\n    error: '#dc2626'     // Red for error borders\n  },\n  \n  // Background colors - used for component backgrounds\n  background: {\n    white: '#ffffff',    // Pure white\n    gray: '#f9fafb'      // Very light gray\n  }\n};\n","// Typography tokens for our design system\n// These ensure consistent text sizing and styling\n\nexport const typography = {\n  // Font sizes for different component sizes\n  fontSize: {\n    sm: '14px',   // Small text (used in small components)\n    md: '16px',   // Medium text (default size)\n    lg: '18px'    // Large text (used in large components)\n  },\n  \n  // Font weights for different text emphasis\n  fontWeight: {\n    normal: 400,    // Regular text weight\n    medium: 500,    // Medium text weight\n    semibold: 600   // Bold text weight\n  },\n  \n  // Line heights for better readability\n  lineHeight: {\n    normal: 1.5,    // Standard line height (1.5x font size)\n    tight: 1.25     // Tighter line height for headings\n  }\n};\n","import React from 'react';\nimport { colors, typography } from '../../tokens';\n\n// Define the props that our Button component accepts\nexport interface ButtonProps {\n  children?: React.ReactNode;                                       // Content inside the button (optional for icon-only buttons)\n  variant?: 'primary' | 'secondary' | 'outline' | 'error' | 'success' | 'warning' | 'text' | 'link'; // Button style variant\n  size?: 'small' | 'medium' | 'large';                            // Button size\n  small?: boolean;                                                  // Shorthand for small size\n  medium?: boolean;                                                 // Shorthand for medium size\n  large?: boolean;                                                  // Shorthand for large size\n  disabled?: boolean;                                               // Whether button is disabled\n  type?: 'button' | 'submit' | 'reset';                           // HTML button type\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;  // Click handler\n  icon?: React.ReactNode;                                          // Icon element\n  iconLocation?: 'start' | 'end';                                 // Icon position relative to text\n  style?: React.CSSProperties;                                     // Custom styles to override defaults\n}\n\n// Helper function to determine the actual size based on props\nconst getActualSize = (size?: string, small?: boolean, medium?: boolean, large?: boolean): string => {\n  // Priority: explicit boolean props > size prop > default medium\n  if (small) return 'small';\n  if (large) return 'large';\n  if (medium) return 'medium';\n  return size || 'medium';\n};\n\n// Helper function to get styles based on variant and size\nconst getButtonStyles = (variant: string, size: string, disabled: boolean, hasIcon: boolean, hasText: boolean) => {\n  // Base styles that apply to all buttons\n  const baseStyles: React.CSSProperties = {\n    border: 'none',\n    borderRadius: '6px',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    fontFamily: 'inherit',\n    fontWeight: typography.fontWeight.medium,\n    transition: 'all 0.2s ease-in-out',\n    opacity: disabled ? 0.5 : 1,\n    outline: 'none',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textDecoration: 'none',\n    gap: hasIcon && hasText ? '8px' : '0',\n  };\n\n  // Size-specific styles\n  const sizeStyles: Record<string, React.CSSProperties> = {\n    small: {\n      height: hasIcon && !hasText ? '32px' : '32px',\n      padding: hasIcon && !hasText ? '0' : '0 12px',\n      fontSize: typography.fontSize.sm,\n      minWidth: hasIcon && !hasText ? '32px' : 'auto',\n    },\n    medium: {\n      height: hasIcon && !hasText ? '40px' : '40px',\n      padding: hasIcon && !hasText ? '0' : '0 16px',\n      fontSize: typography.fontSize.md,\n      minWidth: hasIcon && !hasText ? '40px' : 'auto',\n    },\n    large: {\n      height: hasIcon && !hasText ? '48px' : '48px',\n      padding: hasIcon && !hasText ? '0' : '0 20px',\n      fontSize: typography.fontSize.lg,\n      minWidth: hasIcon && !hasText ? '48px' : 'auto',\n    },\n  };\n\n  // Variant-specific styles\n  const variantStyles: Record<string, React.CSSProperties> = {\n    primary: {\n      backgroundColor: colors.primary.main,\n      color: colors.background.white,\n      border: `1px solid ${colors.primary.main}`,\n    },\n    secondary: {\n      backgroundColor: colors.secondary.light,\n      color: colors.text.primary,\n      border: `1px solid ${colors.border.default}`,\n    },\n    outline: {\n      backgroundColor: 'transparent',\n      color: colors.primary.main,\n      border: `1px solid ${colors.primary.main}`,\n    },\n    error: {\n      backgroundColor: colors.error.main,\n      color: colors.background.white,\n      border: `1px solid ${colors.error.main}`,\n    },\n    success: {\n      backgroundColor: colors.success.main,\n      color: colors.background.white,\n      border: `1px solid ${colors.success.main}`,\n    },\n    warning: {\n      backgroundColor: colors.warning.main,\n      color: colors.background.white,\n      border: `1px solid ${colors.warning.main}`,\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: colors.text.primary,\n      border: '1px solid transparent',\n    },\n    link: {\n      backgroundColor: 'transparent',\n      color: colors.primary.main,\n      border: '1px solid transparent',\n      textDecoration: 'none',\n    },\n  };\n\n  // Combine all styles\n  return {\n    ...baseStyles,\n    ...sizeStyles[size],\n    ...variantStyles[variant],\n  };\n};\n\n// Helper function to get hover styles\nconst getHoverStyles = (variant: string) => {\n  const hoverStyles: Record<string, React.CSSProperties> = {\n    primary: {\n      backgroundColor: colors.primary.hover,\n      borderColor: colors.primary.hover,\n    },\n    secondary: {\n      backgroundColor: colors.secondary.light,\n      borderColor: colors.border.focus,\n    },\n    outline: {\n      backgroundColor: colors.primary.light,\n    },\n    error: {\n      backgroundColor: colors.error.hover,\n      borderColor: colors.error.hover,\n    },\n    success: {\n      backgroundColor: colors.success.hover,\n      borderColor: colors.success.hover,\n    },\n    warning: {\n      backgroundColor: colors.warning.hover,\n      borderColor: colors.warning.hover,\n    },\n    text: {\n      backgroundColor: colors.secondary.light,\n    },\n    link: {\n      textDecoration: 'underline',\n    },\n  };\n\n  return hoverStyles[variant];\n};\n\n// Main Button component\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'primary',     // Default to primary variant\n  size,                    // Size prop (can be overridden by boolean props)\n  small,                   // Boolean prop for small size\n  medium,                  // Boolean prop for medium size\n  large,                   // Boolean prop for large size\n  disabled = false,        // Default to not disabled\n  type = 'button',         // Default to button type\n  onClick,\n  icon,                    // Icon element\n  iconLocation = 'start',  // Default icon location\n  style,                   // Custom styles\n  ...props                 // Spread any additional props\n}) => {\n  // Determine the actual size to use\n  const actualSize = getActualSize(size, small, medium, large);\n  \n  // Check if we have icon and/or text\n  const hasIcon = !!icon;\n  const hasText = !!children;\n  \n  // Get the base styles for this button configuration\n  const buttonStyles = getButtonStyles(variant, actualSize, disabled, hasIcon, hasText);\n  const hoverStyles = getHoverStyles(variant);\n\n  // Merge custom styles with default styles (custom styles override defaults)\n  const finalStyles = style ? { ...buttonStyles, ...style } : buttonStyles;\n\n  // Handle mouse enter (hover) event\n  const handleMouseEnter = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!disabled) {\n      const combinedHoverStyles = style ? { ...hoverStyles, ...style } : hoverStyles;\n      Object.assign(e.currentTarget.style, combinedHoverStyles);\n    }\n  };\n\n  // Handle mouse leave event\n  const handleMouseLeave = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!disabled) {\n      // Reset to original styles\n      Object.assign(e.currentTarget.style, finalStyles);\n    }\n  };\n\n  // Handle focus event for accessibility\n  const handleFocus = (e: React.FocusEvent<HTMLButtonElement>) => {\n    if (!disabled) {\n      e.currentTarget.style.boxShadow = `0 0 0 2px ${colors.primary.light}`;\n    }\n  };\n\n  // Handle blur event\n  const handleBlur = (e: React.FocusEvent<HTMLButtonElement>) => {\n    e.currentTarget.style.boxShadow = 'none';\n  };\n\n  // Render icon and text based on iconLocation\n  const renderContent = () => {\n    if (!hasIcon) {\n      return children;\n    }\n    \n    if (!hasText) {\n      return icon;\n    }\n    \n    if (iconLocation === 'end') {\n      return (\n        <>\n          {children}\n          {icon}\n        </>\n      );\n    }\n    \n    // Default: start position\n    return (\n      <>\n        {icon}\n        {children}\n      </>\n    );\n  };\n\n  return (\n    <button\n      type={type}\n      style={finalStyles}\n      disabled={disabled}\n      onClick={onClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      // Accessibility attributes\n      aria-disabled={disabled}\n      {...props}\n    >\n      {renderContent()}\n    </button>\n  );\n};\n","import React from 'react';\nimport { colors, typography } from '../../tokens';\n\n// Define the props that our Input component accepts\nexport interface InputProps {\n  label?: string;                                                   // Optional label text\n  placeholder?: string;                                             // Placeholder text\n  value?: string;                                                   // Controlled value\n  defaultValue?: string;                                            // Default value for uncontrolled usage\n  type?: 'text' | 'email' | 'password' | 'number';                // HTML input type\n  size?: 'small' | 'medium' | 'large';                            // Input size\n  disabled?: boolean;                                               // Whether input is disabled\n  error?: boolean;                                                  // Whether input has error state\n  errorMessage?: string;                                            // Error message to display\n  helperText?: string;                                              // Helper text below input\n  required?: boolean;                                               // Whether input is required\n  style?: React.CSSProperties;                                     // Custom styles to override defaults\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void; // Change handler\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;   // Focus handler\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;    // Blur handler\n}\n\n// Helper function to get input styles based on size and state\nconst getInputStyles = (size: string, error: boolean, disabled: boolean) => {\n  // Base styles that apply to all inputs\n  const baseStyles: React.CSSProperties = {\n    width: '100%',\n    border: `1px solid ${error ? colors.border.error : colors.border.default}`,\n    borderRadius: '6px',\n    fontFamily: 'inherit',\n    fontWeight: typography.fontWeight.normal,\n    transition: 'all 0.2s ease-in-out',\n    opacity: disabled ? 0.5 : 1,\n    cursor: disabled ? 'not-allowed' : 'text',\n    outline: 'none',\n    backgroundColor: disabled ? colors.background.gray : colors.background.white,\n    color: colors.text.primary,\n  };\n\n  // Size-specific styles\n  const sizeStyles: Record<string, React.CSSProperties> = {\n    small: {\n      height: '32px',\n      padding: '0 12px',\n      fontSize: typography.fontSize.sm,\n    },\n    medium: {\n      height: '40px',\n      padding: '0 16px',\n      fontSize: typography.fontSize.md,\n    },\n    large: {\n      height: '48px',\n      padding: '0 20px',\n      fontSize: typography.fontSize.lg,\n    },\n  };\n\n  return {\n    ...baseStyles,\n    ...sizeStyles[size],\n  };\n};\n\n// Helper function to get label styles\nconst getLabelStyles = (): React.CSSProperties => ({\n  display: 'block',\n  marginBottom: '4px',\n  fontSize: typography.fontSize.sm,\n  fontWeight: typography.fontWeight.medium,\n  color: colors.text.primary,\n});\n\n// Helper function to get helper/error text styles\nconst getTextStyles = (isError: boolean): React.CSSProperties => ({\n  marginTop: '4px',\n  fontSize: typography.fontSize.sm,\n  color: isError ? colors.error.main : colors.text.secondary,\n});\n\n// Helper function to get container styles\nconst getContainerStyles = (): React.CSSProperties => ({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n});\n\n// Main Input component\nexport const Input: React.FC<InputProps> = ({\n  label,\n  placeholder,\n  value,\n  defaultValue,\n  type = 'text',           // Default to text input\n  size = 'medium',         // Default to medium size\n  disabled = false,        // Default to not disabled\n  error = false,           // Default to no error\n  errorMessage,\n  helperText,\n  required = false,        // Default to not required\n  style,                   // Custom styles\n  onChange,\n  onFocus,\n  onBlur,\n  ...props                 // Spread any additional props\n}) => {\n  // Generate unique ID for accessibility (label-input association)\n  const inputId = React.useId();\n\n  // Get styles for this input configuration\n  const containerStyles = getContainerStyles();\n  const labelStyles = getLabelStyles();\n  const inputStyles = getInputStyles(size, error, disabled);\n  const textStyles = getTextStyles(error);\n\n  // Merge custom styles with default styles (custom styles override defaults)\n  const finalInputStyles = style ? { ...inputStyles, ...style } : inputStyles;\n\n  // Handle focus event\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (!disabled) {\n      e.currentTarget.style.borderColor = error ? colors.border.error : colors.border.focus;\n      e.currentTarget.style.boxShadow = `0 0 0 2px ${error ? colors.error.light : colors.primary.light}`;\n    }\n    onFocus?.(e);\n  };\n\n  // Handle blur event\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.currentTarget.style.borderColor = error ? colors.border.error : colors.border.default;\n    e.currentTarget.style.boxShadow = 'none';\n    onBlur?.(e);\n  };\n\n  // Determine what text to show below the input\n  const displayText = error && errorMessage ? errorMessage : helperText;\n\n  return (\n    <div style={containerStyles}>\n      {/* Label (if provided) */}\n      {label && (\n        <label \n          htmlFor={inputId} \n          style={labelStyles}\n        >\n          {label}\n          {required && (\n            <span style={{ color: colors.error.main, marginLeft: '2px' }}>\n              *\n            </span>\n          )}\n        </label>\n      )}\n      \n      {/* Input field */}\n      <input\n        id={inputId}\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        required={required}\n        style={finalInputStyles}\n        onChange={onChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        // Accessibility attributes\n        aria-invalid={error}\n        aria-describedby={displayText ? `${inputId}-text` : undefined}\n        aria-required={required}\n        {...props}\n      />\n      \n      {/* Helper text or error message */}\n      {displayText && (\n        <span \n          id={`${inputId}-text`}\n          style={textStyles}\n          // Accessibility attributes\n          role={error ? 'alert' : undefined}\n          aria-live={error ? 'polite' : undefined}\n        >\n          {displayText}\n        </span>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":"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"}